mkdir versioned-app
cd versioned-app
git init
git config --global user.name 'name'
git config --global user.email 'youremail@example.com'
echo "print('Hello from version 1')" > app.py
git add app.py
git commit -m "Initial commit: Version 1"
git checkout -b version-2
echo "print('Hello from version 2')" > app.py
git checkout main
echo "print('Hello from version 1 (updated)')" > app.py
git add app.py
git commit -m "Update: Version 1"
git merge version-2
#conflict will come
nano app.py
print('Hello from version 1 (updated)')
print('Hello from version 2')
git add app.py
git commit -m "Merged version-2 into main with conflict resolution"
git log --oneline --graph or git log --oneline 
cat app.py

Q5 VERSION CONTROL

mkdir GitEx
cd GitEx
git init
git config --global user.name "Name"
git config --global user.email "name@gmail.com"
touch app.py
Add print statement in app.py
code .
git add .
git commit -m "initial commit"
git switch -c branch1
Go to app.py, change the print statement
git commit -am "First commit on branch1"
git switch master
Change print stmt in app.py
git commit -am "Second commit on master"
git merge branch1
(You could see conflict error here)
Go to VSCode, choose any one option
git commit -am "Fixed Merge Conflict"
Conflict Resolved and Merged
git log --oneline
(To view commits)